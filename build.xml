<?xml version="1.0" encoding="UTF-8"?>
<project name="Meandre-Workbench" basedir="." default="dist">
    <!-- Check whether Java 1.5 is being used -->
    <condition property="jdk15">
            <contains string="${java.version}" substring="1.5"/>
    </condition>

    <fail unless="jdk15" 
          message="This project requires Java 5. Please set JAVA_HOME to point to where JDK 1.5 is installed."/>

    <condition property="isMac">
        <os family="mac"/>
    </condition>

    <condition property="isUnix">
        <os family="unix"/>
    </condition>

    <condition property="isWindows">
        <os family="windows"/>
    </condition>

    <fail message="${ant.project.name} is only supported on Macintosh, Unix, and Windows systems">
        <condition>
            <and> 
                <not> <isset property="isMac"/> </not>
                <not> <isset property="isUnix"/> </not>
                <not> <isset property="isWindows"/> </not>
            </and>
        </condition>
    </fail>

    <property environment="env"/>
<!--
    <fail unless="env.GWT_HOME" 
          message="Please set the GWT_HOME environment variable to point to where you downloaded GWT 1.5"/>
-->
    <property name="src.gwt.dir" value="${basedir}/src"/>
    <property name="src.bootstrap.dir" value="${basedir}/src-bootstrap"/>
    <property name="lib.bootstrap.dir" value="${basedir}/lib/bootstrap"/>
    <property name="lib.buildonly.dir" value="${basedir}/lib/build-only-lib"/>
    <property name="build.dir" value="${basedir}/build"/>
    <property name="build.bootstrap.dir" value="${build.dir}/bootstrap"/>
    <property name="build.server.dir" value="${build.dir}/server"/>
    <property name="dist.dir" value="${basedir}/dist"/>
    <property name="gwt.lib.dir" value="${basedir}/lib"/>
    <property name="gwt.output.dir" value="${build.dir}/gwtOutput"/>
    <property name="gwt.workbench" value="org.seasr.meandre.workbench.Workbench"/>
    <property name="bootstrap.class" value="org.seasr.meandre.workbench.bootstrap.JettyBootstrapper"/>
    <property name="war.dir" value="${dist.dir}/war"/>

    <path id="workbench.classpath">
        <fileset dir="${lib.buildonly.dir}" includes="*.jar"/>
        <fileset dir="${gwt.lib.dir}" includes="*.jar"/>
    </path>
    
    <path id="dist.classpath">
        <fileset dir="${war.dir}/WEB-INF/lib" includes="*.jar"/>
        <fileset dir="${dist.dir}/bootstrap/lib" includes="*.jar"/>
        <pathelement location="${dist.dir}/bootstrap"/>
    </path>

    <path id="gwt_compile.classpath">
        <pathelement location="${src.gwt.dir}"/>
        <pathelement location="${build.server.dir}"/>
        <path refid="workbench.classpath"/>
    </path>

    <path id="bootstrap_compile.classpath">
        <fileset dir="${lib.bootstrap.dir}" includes="*.jar"/>
    </path>

    <target name="init">
        <tstamp/>
        
        <mkdir dir="${build.bootstrap.dir}"/>
        <mkdir dir="${build.server.dir}"/>
        <mkdir dir="${gwt.output.dir}"/>
        <mkdir dir="${dist.dir}/bootstrap/lib"/>
        <mkdir dir="${war.dir}/WEB-INF/classes"/>
        <mkdir dir="${war.dir}/WEB-INF/lib"/>
    </target>
    
    <target name="clean" description="-> removes auto-generated files/folders">
        <delete dir="${build.bootstrap.dir}"/>
        <delete dir="${build.server.dir}"/>
        <delete dir="${gwt.output.dir}"/>
        <delete dir="${dist.dir}"/>
    </target>

    <target name="gwt_compile" depends="init" description="-> compiles the main GWT source tree">
        <echo message="Using GWT from ${lib.buildonly.dir}"/>
        
        <delete dir="${gwt.output.dir}"/>
        <java classname="com.google.gwt.dev.GWTCompiler" fork="yes" maxmemory="512m">
            <classpath refid="gwt_compile.classpath"/>
            <arg line="-out ${gwt.output.dir}"/>
            <arg value="$@"/>
            <arg value="${gwt.workbench}"/>
        </java>
    </target>

    <target name="server_compile" depends="init" description="-> compiles the server-side code">
        <javac srcdir="${src.gwt.dir}" destdir="${build.server.dir}" classpathref="gwt_compile.classpath" debug="on" source="1.5"/>
    </target>

    <target name="bootstrap_compile" depends="init" description="-> compiles the bootstrapper">
        <javac srcdir="${src.bootstrap.dir}" destdir="${build.bootstrap.dir}" classpathref="bootstrap_compile.classpath" debug="on" source="1.5"/>
    </target>

    <target name="compile" depends="gwt_compile, server_compile, bootstrap_compile" description="-> compiles the entire project"/>

    <target name="dist" depends="compile" description="-> creates distribution">
        <copy todir="${war.dir}/WEB-INF/classes">
            <fileset dir="${build.server.dir}"/>
        </copy>
        
        <copy todir="${war.dir}/WEB-INF/lib">
            <path refid="workbench.classpath"/>
        </copy>
                
        <copy todir="${war.dir}">
            <fileset dir="${gwt.output.dir}/${gwt.workbench}"/>
        </copy>
        
        <copy todir="${dist.dir}/bootstrap">
            <fileset dir="${build.bootstrap.dir}"/>
        </copy>
        
        <copy file="${src.bootstrap.dir}/workbench-jetty.xml" todir="${dist.dir}/bootstrap" />
        
        <copy todir="${dist.dir}/bootstrap/lib">
            <path refid="bootstrap_compile.classpath"/>
        </copy>
    </target>

    <target name="run" depends="dist" description="-> runs the Jetty engine">
        <java classname="${bootstrap.class}" fork="yes" maxmemory="1024m">
            <classpath refid="dist.classpath"/>
            <arg value="${dist.dir}"/>
        </java>
    </target>

</project> 

<!-- DO NOT EDIT BELOW THIS LINE PLEASE -->
<!-- vim:sw=4:softtabstop=4:expandtab
-->
